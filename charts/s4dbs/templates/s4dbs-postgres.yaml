{{- if not (lookup "v1" "PersistentVolumeClaim" .Release.Namespace .Values.s4dbsPostgresDeployment.persistentVolumeClaimName) }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.s4dbsPostgresDeployment.persistentVolumeClaimName }}
  annotations:
    "helm.sh/resource-policy": "keep"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.pdb.storageClassName  | default "managed-csi" }} 
  # edit storage class name according to your k8s provider in values.yaml
  resources:
    requests:
      storage: {{ .Values.s4dbsPostgresDeployment.persistentVolumeClaimSize }}
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: 
    app: s4dbs-postgres
  name: s4dbs-postgres-deployment
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: s4dbs-postgres
  template:
    metadata:
      labels:
        app: s4dbs-postgres
    spec:
      volumes:
      - name: postgres-pv-storage
        persistentVolumeClaim:
          claimName: {{ .Values.s4dbsPostgresDeployment.persistentVolumeClaimName }}
      containers:
      - name: s4dbs-postgres
        image: {{ .Values.s4dbsPostgresDeployment.image }}
        ports:
        - containerPort: {{ .Values.pdb.pdbPort  | default "5432" }}
        imagePullPolicy: Always
        env:
        - name: POSTGRES_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: s4dbs-secrets
              key: postgres-password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        volumeMounts:
        - name: postgres-pv-storage
          mountPath: /var/lib/postgresql/data
---
apiVersion: v1
kind: Service
metadata:
  name: s4dbs-postgres-service
spec:
  selector:
    app: s4dbs-postgres
  ports:
    - protocol: TCP
      port: {{ .Values.pdb.pdbPort  | default "5432" }}
      targetPort: {{ .Values.pdb.pdbPort  | default "5432" }}
