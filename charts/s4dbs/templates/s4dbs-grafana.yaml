apiVersion: apps/v1
kind: Deployment
metadata:
  labels: 
    app: s4dbs-grafana
  name: s4dbs-grafana-deployment
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: s4dbs-grafana
  template:
    metadata:
      labels:
        app: s4dbs-grafana
    spec:
      volumes:
      - name: grafana-pv-storage
        persistentVolumeClaim:
          claimName: {{ .Values.s4dbsGrafanaDeployment.persistentVolumeClaimName }}
      - name: grafana-dashboard-pv-storage
        persistentVolumeClaim:
          claimName: {{ .Values.s4dbsGrafanaDeployment.persistentVolumeClaimNameDashboards }}
      containers:
      - name: s4dbs-grafana
        image: {{ .Values.s4dbsGrafanaDeployment.image }}
        ports:
        - containerPort: {{ .Values.s4dbsGrafanaDeployment.port }}
        imagePullPolicy: Always
        env:
          - name: PDB_DB_NAME
            value: {{ .Values.pdb.pdbDbName }}
          - name: PDB_HOST
            value: {{ .Values.pdb.pdbHost }}
          - name: PDB_PASS
            valueFrom: 
              secretKeyRef:
                name: s4dbs-secrets
                key: postgres-password
          - name: PDB_PORT
            value: {{ .Values.pdb.pdbPort | quote }}
          - name: PDB_USER
            value: {{ .Values.pdb.pdbUser }}
          - name: GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH
            value: /grafanaprovisioning/dashboards/sfdbs-spg/S4DBs-Overview.json
          - name: GF_SERVER_SERVE_FROM_SUB_PATH
            value: "true"
          - name: GF_SERVER_ROOT_URL
            value: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
          - name: GF_SERVER_DOMAIN
            value: {{ .Values.serverHostname }}
          - name: GF_SECURITY_ALLOW_EMBEDDING
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_USERS_DEFAULT_THEME
            value: "light"
          - name: GF_PATHS_PLUGINS
            value: "/grafanaplugins/"
          - name: GF_PATHS_PROVISIONING
            value: "/grafanaprovisioning/"
        volumeMounts:
          - name: grafana-pv-storage
            mountPath: /var/lib/grafana
          - name: grafana-dashboard-pv-storage
            mountPath: /grafanaprovisioning/
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: s4dbs-grafana-service
spec:
  selector:
    app: s4dbs-grafana
  ports:
    - protocol: TCP
      port: {{ .Values.s4dbsGrafanaDeployment.port }}
      targetPort: {{ .Values.s4dbsGrafanaDeployment.port }}
